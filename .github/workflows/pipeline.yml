name: My experimental pipeline
on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  try-windows:
    runs-on: windows-latest
    steps:
      - run: |
          echo ${{ runner.os }}
          echo ${{ github.event_name }}
          echo ${{ github.event.ref }}
      - name: Run only for PRs
        if: github.event_name == 'pull_request'
        run: echo "This is a PR"
  run-python-hello-world:
    runs-on: ubuntu-22.04
    steps:
      - name: Set up Python 3.10.10
        uses: actions/setup-python@v4.6.1
        with:
          python-version: 3.10.10
      - name: Print the version of Python
        run: python --version
      - name: Checkout the repository
        uses: actions/checkout@v3.5.3
      - name: Run the Python-written hello world
        run: ./hello_world.py
  run-ruby-hello-world:
    runs-on: ubuntu-22.04
    steps:
      - name: Set up Ruby 3.10.10
        uses: ruby/setup-ruby@v1.152.0
        with:
          ruby-version: 3.0.5
      - name: Print the version of Ruby
        run: ruby --version
      - name: Checkout the repository
        uses: actions/checkout@v3.5.3
      - name: Run the Ruby-written hello world
        run: ./hello_world.rb
  gen-random:
    runs-on: ubuntu-22.04
    outputs:
      random: ${{ steps.random-step.outputs.randomval }}
    steps:
      - name: Set up Ruby 3.0.5
        uses: ruby/setup-ruby@v1.152.0
        with:
          ruby-version: 3.0.5
      - name: Try with an env variable
        run: export MY_RANDOM="$(ruby -e 'puts rand(10)')"
      - name: Generate a random number
        id: random-step
        run: ruby -e 'puts "randomval=#{rand(10)}"' >> "$GITHUB_OUTPUT"
      - name: Check that the env is set
        env:
          MY_RANDOM: ${{ steps.random-step.outputs.randomval }}
        run: |
          echo MY_RANDOM IS NOW SET TO: $MY_RANDOM
          [ -n "$MY_RANDOM" ]
      - name: Print the random number plus one
        if: steps.random-step.outputs.randomval > 5
        run: ruby -e 'puts(${{ steps.random-step.outputs.randomval }} + 1)'
  use-random-on-mac:
    runs-on: macos-${{ '13' }}
    needs:
      - gen-random
    if: needs.gen-random.outputs.random > 10
    steps:
      - run: echo ${{ needs.gen-random.outputs.random }}
  test-failures:
    runs-on: ubuntu-22.04
    needs:
      - gen-random
    steps:
      - name: Failure
        run: exit 1
      - name: Recovery
        if: failure()
        run: echo "Failure was expected"
      - name: Recovery
        if: always() && needs.gen-random.outputs.random > 5
        run: echo "Failure was expected"
